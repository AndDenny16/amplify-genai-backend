service: vu-amplify-lambda-personal-db

frameworkVersion: "3"

package:
  exclude:
    - node_modules/**
    - venv/**

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-prune-plugin

custom:
  stageVariables: ${file(../var/${self:provider.stage}-var.yml)} 
  stages:
    - dev
    - staging
    - prod

    
provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  versionFunctions: false
  environment:
    OAUTH_AUDIENCE: ${self:custom.stageVariables.OAUTH_AUDIENCE}
    OAUTH_ISSUER_BASE_URL: ${self:custom.stageVariables.OAUTH_ISSUER_BASE_URL}
    PERSONAL_DB_DYNAMO_TABLE: ${self:service}-${sls:stage}-personal-db
    ACCOUNTS_DYNAMO_TABLE: vu-amplify-${sls:stage}-accounts
    API_KEYS_DYNAMODB_TABLE: vu-amplify-object-access-${sls:stage}-api-keys
    COST_CALCULATIONS_DYNAMO_TABLE: vu-amplify-${sls:stage}-cost-calculations

  apiGateway:
    restApiId:
      ${self:custom.stageVariables.REST_API_ID}
    restApiRootResourceId:
      ${self:custom.stageVariables.REST_API_ROOT_RESOURCE_ID}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.PERSONAL_DB_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}/index/*"


functions:

  personal_db_create:
    handler: service/core.create_or_update_personal_db
    timeout: 30
    events:
      - http:
          path: personal/db/create
          method: post
          cors: true

  personal_db_list:
    handler: service/core.list_personal_dbs
    timeout: 30
    events:
      - http:
          path: personal/db/list
          method: post
          cors: true

  personal_db_insert:
    handler: service/core.insert_db_row
    timeout: 30
    events:
      - http:
          path: personal/db/items/insert
          method: post
          cors: true

  personal_db_list_items:
    handler: service/core.list_personal_db_items
    timeout: 30
    events:
      - http:
          path: personal/db/items/list
          method: post
          cors: true

resources:
  Resources:
    PersonalDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PERSONAL_DB_DYNAMO_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: hashKey
            AttributeType: S
          - AttributeName: rangeKey
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: hashKey
            KeyType: HASH
          - AttributeName: rangeKey
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: id-index
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        
           