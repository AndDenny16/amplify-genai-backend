service: vu-amplify-market
frameworkVersion: '3'
package:
  exclude:
    - node_modules/**
    - venv/**

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-deployment-bucket
custom:

  stageVariables: ${file(../var/${self:provider.stage}-var.yml)} 

  pythonRequirements:
    dockerizePip: non-linux
    layer: true

  stages:
    - dev
    - staging
    - prod

  deploymentBucket:
    versioning: true
    accelerate: true
    blockPublicAccess: true
    tags:
      - Key: Environment
        Value: ${self:provider.stage}

         

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  versionFunctions: false
  apiGateway:
    restApiId:
      ${self:custom.stageVariables.REST_API_ID}
    restApiRootResourceId:
      ${self:custom.stageVariables.REST_API_ROOT_RESOURCE_ID}   
  deploymentBucket:
    name: ${self:service}-${sls:stage}-deployment-bucket
    serverSideEncryption: AES256
  environment:
    #from stageVariables file
    OAUTH_AUDIENCE: ${self:custom.stageVariables.OAUTH_AUDIENCE}
    OAUTH_ISSUER_BASE_URL: ${self:custom.stageVariables.OAUTH_ISSUER_BASE_URL}
    MIN_ACU: ${self:custom.stageVariables.MIN_ACU}
    MAX_ACU: ${self:custom.stageVariables.MAX_ACU}
    VPC_ID: ${self:custom.stageVariables.VPC_ID}
    PRIVATE_SUBNET_ONE: ${self:custom.stageVariables.PRIVATE_SUBNET_ONE}
    PRIVATE_SUBNET_TWO: ${self:custom.stageVariables.PRIVATE_SUBNET_TWO}
    VPC_CIDR: ${self:custom.stageVariables.VPC_CIDR}
    API_ID: ${self:custom.stageVariables.API_ID}
    SES_SECRET_ARN: ${self:custom.stageVariables.SES_SECRET_NAME}
    OPENAI_API_KEY_ARN: ${self:custom.stageVariables.OPENAI_API_KEY_ARN}
    # LLM_ENDPOINTS_SECRETS_NAME_ARN IS NEW
    MARKET_CATEGORIES_DYNAMO_TABLE: ${self:service}-${sls:stage}-market-categories
    MARKET_ITEMS_DYNAMO_TABLE: ${self:service}-${sls:stage}-market-items
    S3_MARKET_INDEX_BUCKET_NAME: ${self:service}-${sls:stage}-market-index
    LLM_ENDPOINTS_SECRETS_NAME_ARN: ${self:custom.stageVariables.LLM_ENDPOINTS_SECRETS_NAME_ARN}
    ACCOUNTS_DYNAMO_TABLE: vu-amplify-${sls:stage}-accounts
    API_KEYS_DYNAMODB_TABLE: vu-amplify-object-access-${sls:stage}-api-keys
    COST_CALCULATIONS_DYNAMO_TABLE: vu-amplify-${sls:stage}-cost-calculations
    

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - s3:GetObject  
            - s3:PutObject  
            - s3:DeleteObject
            - s3:HeadObject 
            - s3:ListBucket 
          Resource:
            - ${self:provider.environment.LLM_ENDPOINTS_SECRETS_NAME_ARN}
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}/index/*"
            - "arn:aws:s3:::${self:provider.environment.S3_MARKET_INDEX_BUCKET_NAME}"
            - "arn:aws:s3:::${self:provider.environment.S3_MARKET_INDEX_BUCKET_NAME}/*" 
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.MARKET_ITEMS_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.MARKET_ITEMS_DYNAMO_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.MARKET_CATEGORIES_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.MARKET_CATEGORIES_DYNAMO_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}/*"

functions:

  market_publish_item:
    handler: market/market.publish_item
    events:
      - http:
          path: market/item/publish
          method: post
          cors: true

  market_delete_item:
    handler: market/market.delete_item
    events:
      - http:
          path: market/item/delete
          method: post
          cors: true

  market_get_category:
    handler: market/market.get_category
    events:
      - http:
          path: market/category/get
          method: post
          cors: true

  market_item_examples:
    handler: market/market.get_item_examples
    events:
      - http:
          path: market/item/examples/get
          method: post
          cors: true

  market_get_item:
    handler: market/market.get_item
    events:
      - http:
          path: market/item/get
          method: post
          cors: true

  market_list_categories:
    handler: market/market.list_categories
    events:
      - http:
          path: market/category/list
          method: post
          cors: true

  market_ideate:
    handler: market/market.ideate
    events:
      - http:
          path: market/ideate
          method: post
          cors: true

  index_market_item:
    handler: market/market.index_item
    reservedConcurrency: 1
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - MarketItemsDynamoDbTable
              - StreamArn
          batchSize: 1
          batchWindow: 60

  index_market_category:
    handler: market/market.index_category
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - MarketCategoriesDynamoDbTable
              - StreamArn
          batchSize: 1
          batchWindow: 60

resources:
  Resources:
    LambdaSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: "Security group for  Lambda Functions"
        VpcId: ${self:provider.environment.VPC_ID}
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0

    MarketIndexBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_MARKET_INDEX_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins: ['*']
              AllowedMethods: ['GET']
              AllowedHeaders: ['*']
              MaxAge: 3000

    MarketItemsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        StreamSpecification:
            StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: category
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S
          -
            AttributeName: type
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          -
            IndexName: CategoryIndex
            KeySchema:
              - AttributeName: category
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          -
            IndexName: CategoryTypeIndex
            KeySchema:
              - AttributeName: category
                KeyType: HASH
              - AttributeName: type
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.MARKET_ITEMS_DYNAMO_TABLE}

    MarketCategoriesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
            StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        TableName: ${self:provider.environment.MARKET_CATEGORIES_DYNAMO_TABLE}